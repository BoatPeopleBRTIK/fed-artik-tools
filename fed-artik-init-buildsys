#!/bin/bash

BUILDCONFIG="~/.fed-artik-build.conf"
BUILDARCH=armv7hl
USE_OFFICIAL_REPO="0"
BUILDROOT=
EXECUTE_COMMANDS=""
ESSENTIAL_PACKAGES="@development-tools fedora-packager rpmdevtools dnf-plugins-core createrepo appliance-tools automake gcc-c++"
USE_DISTCC=0
IMPORT_ROOTFS=
HOSTS=/etc/hosts
NO_PROXY=

. `dirname "$(readlink -f "$0")"`/fed-artik-common.inc

usage() {
	cat <<EOF
	usage: ${0##*/} [options]

	-h              Print this help message
	-B BUILDROOT	BUILDROOT directory, if not specified read from ~/.fed-artik-build.conf
	-C conf		Build configurations(If not specified, use default .fed-artik-build.conf
	-A ARCH		Build Architecture. armv7hl
	-H [hosts]	Hosts file to bind /etc/hosts
	-f Fedora_Ver	Fedora version(Default: f22)
	--official-repo	Use official repository instead of meta repository
	--distcc	Use distcc to accelerate build
	--no-proxy list	No proxy
	-I ROOTFS	Import fedora rootfs
EOF
	exit 0
}

parse_options()
{
	for opt in "$@"
	do
		case "$opt" in
			-h|--help)
				usage
				shift ;;
			-B|--buildroot)
				BUILDROOT=`readlink -e "$2"`
				shift ;;
			-C)
				BUILDCONFIG=`readlink -e "$2"`
				shift ;;
			-A|--arch)
				BUILDARCH="$2"
				shift ;;
			-f)
				FEDORA_VER="$2"
				shift ;;
			--official-repo)
				USE_OFFICIAL_REPO="1"
				shift ;;
			-I)
				IMPORT_ROOTFS="$2"
				shift ;;
			--no-proxy)
				NO_PROXY="$2"
				shift ;;
			-H)
				HOSTS="$2"
				shift ;;
			*)
				shift ;;
		esac
	done
}

change_official_repo()
{
	local scratch_root=$1
	sudo sed -i 's/^metalink/#metalink/g' $scratch_root/etc/yum.repos.d/fedora*
	sudo sed -i 's/^mirrorlist/#mirrorlist/g' $scratch_root/etc/yum.repos.d/rpmfusion*
	sudo sed -i 's/^#baseurl/baseurl/g' $scratch_root/etc/yum.repos.d/*

	sudo sed -i 's/metadata_expire=6h/metadata_expire=7d/g' $scratch_root/etc/yum.repos.d/fedora-updates.repo
}

change_metalink_repo()
{
	local scratch_root=$1
	sudo sed -i 's/^#metalink/metalink/g' $scratch_root/etc/yum.repos.d/fedora*
	sudo sed -i 's/^#mirrorlist/mirrorlist/g' $scratch_root/etc/yum.repos.d/rpmfusion*
	sudo sed -i 's/^baseurl/#baseurl/g' $scratch_root/etc/yum.repos.d/*

	sudo sed -i 's/metadata_expire=6h/metadata_expire=7d/g' $scratch_root/etc/yum.repos.d/fedora-updates.repo
}

install_essential_packages()
{
	append_command "dnf install -v -y --best --allowerasing $ESSENTIAL_PACKAGES"
}

install_rpmfusion_free()
{
	append_command "dnf install -y http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-${FEDORA_VER}.noarch.rpm"
	if [ "$USE_OFFICIAL_REPO" == "1" ]; then
		append_command "sed -i 's/^mirrorlist/#mirrorlist/g' /etc/yum.repos.d/rpmfusion*"
		append_command "sed -i 's/^#baseurl/baseurl/g' /etc/yum.repos.d/*"
	fi
}

setup_initial_directory()
{
	append_command "rpmdev-setuptree"
}

setup_distcc()
{
	append_command "cd /usr/local/bin; for f in gcc g++ cc c++ armv7hl-redhat-linux-gnueabi-gcc; do ln -sf /usr/bin/distcc \$f; done"
	append_command "echo 127.0.0.1 > /etc/distcc/hosts"
	ESSENTIAL_PACKAGES+=" distcc"
}

copy_qemu()
{
	local scratch_root=$1
	local buildarch=$2

	if [ "$buildarch" == "armv7hl" ]; then
		QEMU_BIN=qemu-arm-static
	else
		QEMU_BIN=qemu-aarch64-static
	fi

	if [ -e $SCRIPT_DIR/$QEMU_BIN ]; then
		sudo cp $SCRIPT_DIR/$QEMU_BIN $scratch_root/usr/bin
	elif [ -e /usr/local/bin/$QEMU_BIN ]; then
		sudo cp /usr/local/bin/$QEMU_BIN $scratch_root/usr/bin
	elif [ -e /usr/bin/$QEMU_BIN ]; then
		sudo cp /usr/bin/$QEMU_BIN $scratch_root/usr/bin
	fi
}

if [ "$BUILDCONFIG" == "~/.fed-artik-build.conf" ]; then
	BUILDCONFIG="${BUILDCONFIG/#\~/$(eval echo ~$SUDO_USER)}"
fi

parse_options "$@"
parse_config $BUILDCONFIG
parse_options "$@"

if [ "$BUILDROOT" == "~/*" ]; then
	BUILDROOT="${BUILDROOT/#\~/$(eval echo ~$SUDO_USER)}"
fi
eval BUILDROOT=$BUILDROOT
SCRATCH_ROOT=$BUILDROOT/BUILDROOT
[ ! -d $SCRATCH_ROOT ] && die "cannot find buildroot"

if [ "$IMPORT_ROOTFS" != "" ]; then
	sudo rm -rf $SCRATCH_ROOT/*
	sudo tar xf $IMPORT_ROOTFS -C $SCRATCH_ROOT
fi

if [ "$USE_OFFICIAL_REPO" == "1" ]; then
	change_official_repo $SCRATCH_ROOT
else
	change_metalink_repo $SCRATCH_ROOT
fi

copy_qemu $SCRATCH_ROOT $BUILDARCH

if [ "$NO_PROXY" != "" ]; then
	append_command "export no_proxy=$NO_PROXY"
fi

install_essential_packages
install_rpmfusion_free
setup_initial_directory
[ "$USE_DISTCC" == "1" ] && setup_distcc

echo "### You may need to wait long time(>5 minutes) to synchronize rpmdb"
sudo -H $SCRIPT_DIR/chroot_fedora -H $HOSTS $SCRATCH_ROOT "$EXECUTE_COMMANDS"

echo "### fedora artik build system has been created"
